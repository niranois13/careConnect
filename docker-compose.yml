services:
  server:
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/server:/careConnect/apps/server
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    command:
      [
        'nodemon',
        '--legacy-watch',
        '--watch',
        './apps/server/src',
        '--ext',
        'ts,tsx',
        '--exec',
        'pnpm',
        'ts-node',
        './apps/server/src/server.ts',
      ]

  postgres:
    image: postgres:16
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${DB_USER}', '-d', '${DB_NAME}']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  postgres-data:
